<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_guide.RequestManager</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>RequestManager</name>
        <script><![CDATA[var RequestManager = Class.create();
RequestManager.prototype = {
    initialize: function(reqID) {
		this.reqID          = reqID;
		this.reqTable       = 'x_snc_guide_site_request';
		this.siteTable      = 'x_snc_guide_site';
		this.reqHoursTable  = 'x_snc_guide_request_hours';
		this.siteHoursTable = 'x_snc_guide_site_hours';
		this.copyFields = [
			{"source" : "site_name", "target" : "name"},
			{"source" : "owner", "target" : "owner" },
			{"source" : "website", "target" : "website"},
			{"source" : "webcam", "target" : "webcam"},
			{"source" : "booking_site", "target" : "booking_site"},
			{"source" : "description", "target" : "description"},
			{"source" : "location", "target" : "location"},
			{"source" : "phone", "target" : "phone"},
			{"source" : "type", "target" : "type"}
			];
    },
	
	createSite : function() {
	
		var siteID = this._createSite();
		if (siteID) {
			this._createHours(siteID);
		}

	},
	
	_createSite : function() {
		
		this.req = this._getRequest();

		if (this.req) {
			
			var site = new GlideRecord(this.siteTable);
			site.newRecord();
			for (var i = 0; i < this.copyFields.length; i++) {
				var s = this.copyFields[i].source;
				var t = this.copyFields[i].target;
				
				gs.info(s + ' = ' + this.req.getValue(s) + ' t=' + t);
				site.setValue(t, this.req.getValue(s));
			}
			var siteID = site.insert();
			
			return siteID;
			// this._copyImage(siteID);
		}
		
		return;
	},
	
	_createHours : function(siteID) {
		
		gs.info('Copying hours...');
		var src = new GlideRecord(this.reqHoursTable);
		src.addQuery('request', this.reqID);
		src.query();
		gs.info(src.getRowCount() + 'records found');
		
		while (src.next()) {
			
			gs.info('Copying hours: ' + src.getValue('day'));
			var dest = new GlideRecord(this.siteHoursTable);
			dest.newRecord();
			this._copyHourFields(src, dest, siteID);
			dest.insert();
		}
		
	},
	
	_copyHourFields : function(src, dest, siteID) {
		
		var hoursFields = [
			'day',
			'open_hour',
			'open_minute',
			'close_hour',
			'close_minute',
			'order'
		];
		
		for (var i = 0 ; i < hoursFields.length; i++) {
			var fName = hoursFields[i];
			dest.setValue(fName, src.getValue(fName));
			dest.site = siteID;
		}
	},
	
	_getRequest : function() {
		
		var req = new GlideRecord(this.reqTable);
		if (req.get(this.reqID))
			return req;
		
		return;
		
	},
	
	_copyImage : function() {
		
	},

    type: 'RequestManager'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>chuck.tomasi</sys_created_by>
        <sys_created_on>2017-05-15 23:02:20</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>cda853f8db7a7200c3beffa31d96193e</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>RequestManager</sys_name>
        <sys_package display_value="Guide" source="x_snc_guide">e95995f8db767200c3beffa31d9619fc</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Guide">e95995f8db767200c3beffa31d9619fc</sys_scope>
        <sys_update_name>sys_script_include_cda853f8db7a7200c3beffa31d96193e</sys_update_name>
        <sys_updated_by>chuck.tomasi</sys_updated_by>
        <sys_updated_on>2017-05-15 23:42:44</sys_updated_on>
    </sys_script_include>
</record_update>
