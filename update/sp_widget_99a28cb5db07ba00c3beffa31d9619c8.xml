<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function addEventMaterial($rootScope, appManager, $timeout, $http, $scope) {
    var c = this;
    $rootScope.showAddEvent = false;
    $rootScope.buttonPopped = true;

    appManager.trackPages('city_guide_add_event_material');
    appManager.setTitle("Add Event");
    $scope.event = {};
    c.data.resEventSys = "";
    c.data.eventCreated = false;
    c.server.get({ action: 'get' }).then(function(response) {
        c.data.types = response.data.formdata.types;
        c.data.typesWithsysid = response.data.formdata.typesWithsysid;
        $scope.event.type = c.data.types[0];
    });

    var currentTime = new Date();
    c.currentTime = currentTime;
    c.month = ['Januar', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
    c.monthShort = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
    c.weekdaysFull = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
    c.weekdaysLetter = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];

    //c.disable = [false, 1, 7];//to disable weekends
    c.today = 'Today';
    c.clear = 'Clear';
    c.close = 'Close';
    var days = 1;
    //disable all dates less than yesterday
    c.minDate = (new Date(c.currentTime.getTime() - (1000 * 60 * 60 * 24 * days))).toISOString();
    // c.maxDate = (new Date(c.currentTime.getTime() + (1000 * 60 * 60 * 24 * days))).toISOString();


    // c.addSite = function(val) {
    //     console.log(val);
    // }

    // c.getSites = function(val) {
    //     return $http.get('/api/now/table/x_snc_guide_site?sysparm_query=nameSTARTSWITH' + val + '%5Eactive%3Dtrue&sysparm_fields=&sysparm_limit=5', {
    //         headers: {
    //             'Accept': 'application/json',
    //             'Content-Type': 'application/json',
    //             'X-UserToken': window.g_ck
    //         }
    //     }).then(function(response) {

    //         return response.data.result;
    //     });
    // };


    $scope.$watch('event', function(newVal, oldVal) {

        if (newVal.name && newVal.type && newVal.description && newVal.startdate && newVal.enddate && newVal.fileUploaded) {

            c.showSubmit = true;
        } else {
            c.showSubmit = false;
        }
    }, true);


    c.submitEvent = function(event) {
        event.startdate = moment(event.startdate).format('DD-MM-YYYY');
        event.enddate = moment(event.enddate).format('DD-MM-YYYY');

        c.server.get({ action: 'set', event: event, types: c.data.typesWithsysid }).then(function(response) {
            // debugger;
            c.data.resEventSys = response.data.response.eventsys;
            scope.event.type = c.data.types[0];

            var file = $scope.myFile;
            console.log('file is ');
            console.dir(file);
            var uploadUrl = "/api/now/attachment/upload";
            uploadFileToUrl(file, uploadUrl, c.data.resEventSys);

        })
    }

    //============== DRAG & DROP =============

    $scope.setFiles = function(element) {
        $scope.$apply(function(scope) {
            console.log('files:', element.files);
            $scope.myFile = element.files[0];
            $scope.event.fileUploaded = $scope.myFile.name;

        })
    };

    function uploadFileToUrl(file, uploadUrl, eventSysid) {
        var fd = new FormData();
        fd.append('table_name', 'x_snc_guide_event');
        fd.append('table_sys_id', eventSysid);
        fd.append('file', file, 'photo');
        $http.post(uploadUrl, fd, {
                transformRequest: angular.identity,
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': undefined,
                    'X-UserToken': window.g_ck
                }
            })
            .success(function(response) {
                $scope.event = {};
                $scope.myFile = {};
                c.data.eventCreated = true;
                $timeout(function() {
                    c.data.eventCreated = false;
                }, 4000);
            })
            .error(function() {});
    }

}]]></client_script>
        <controller_as>c</controller_as>
        <css>$font-size:24px;
$form-text-color: #333;
$form-elements-border: #cecece;
$brand-primary:#f95050;
$date-picker-header:#d9534f;
$switcher-bg:#d9534f;
.material-form {
    font-family: $font-family;
    background: #f8f1eb;
    padding-top: 20px;
    min-height: 100vh;
    font-weight: 300;
    .label {
        font-size: 22px;
        color: #333;
        word-break: break-word;
        white-space: normal;
        word-wrap: break-word;
        font-weight: 300;
        padding: 0px;
    }
     ::-webkit-input-placeholder {
        /* Chrome/Opera/Safari */
        color: $form-text-color;
    }
     ::-moz-placeholder {
        /* Firefox 19+ */
        color: $form-text-color;
    }
     :-ms-input-placeholder {
        /* IE 10+ */
        color: $form-text-color;
    }
     :-moz-placeholder {
        /* Firefox 18- */
        color: $form-text-color;
    }
    .switch {
        padding-top: 10px;
        padding-bottom: 10px;
        font-weight: 300;
        label {
            color: #333;
            font-size: 18px;
        }
    }
    .btn-div {
        position: relative;
        //margin: 10px;
        .add-event-btn {
            border-radius: 0px;
            background: #6bbdc6;
            position: fixed;
            width: 100%;
            bottom: -100px;
            height: 0px;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
            box-shadow: -1px 2px 3px #333;
            transition: all 0.5s;
            &amp;.pop-it-up {
                position: fixed;
                width: 100%;
                bottom: 59px;
                height: 56px;
                overflow: auto;
                p {
                    color: #fff;
                }
            }
        }
    }
    p {
        margin-bottom: 0px;
        font-size: 18px;
        text-align: center;
        color: teal;
        text-transform: uppercase;
    }
    .bottom-div {
        clear: both;
    }
}


/* Checkboxes
========================================================================== */


/* CUSTOM CSS CHECKBOXES */

form p {
    margin-bottom: 10px;
    text-align: left;
}

form p:last-child {
    margin-bottom: 0;
}


/* Remove default checkbox */

[type="checkbox"]:not(:checked),
[type="checkbox"]:checked {
    position: absolute;
    left: -9999px;
    opacity: 0;
}

[type="checkbox"] {
    /* checkbox aspect */
}

[type="checkbox"]+label {
    position: relative;
    padding-left: 35px;
    cursor: pointer;
    display: inline-block;
    height: 25px;
    line-height: 25px;
    font-size: $font-size;
    -webkit-user-select: none;
    /* webkit (safari, chrome) browsers */
    -moz-user-select: none;
    /* mozilla browsers */
    -khtml-user-select: none;
    /* webkit (konqueror) browsers */
    -ms-user-select: none;
    /* IE10+ */
}

[type="checkbox"]+label:before,
[type="checkbox"]:not(.filled-in)+label:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 18px;
    height: 18px;
    z-index: 0;
    border: 2px solid #5a5a5a;
    border-radius: 1px;
    margin-top: 2px;
    transition: .2s;
}

[type="checkbox"]:not(.filled-in)+label:after {
    border: 0;
    transform: scale(0);
}

[type="checkbox"]:not(:checked):disabled+label:before {
    border: none;
    background-color: rgba(0, 0, 0, 0.26);
}

[type="checkbox"].tabbed:focus+label:after {
    transform: scale(1);
    border: 0;
    border-radius: 50%;
    box-shadow: 0 0 0 10px rgba(0, 0, 0, 0.1);
    background-color: rgba(0, 0, 0, 0.1);
}

[type="checkbox"]:checked+label:before {
    top: -4px;
    left: -5px;
    width: 12px;
    height: 22px;
    border-top: 2px solid transparent;
    border-left: 2px solid transparent;
    border-right: 2px solid $brand-primary;
    border-bottom: 2px solid $brand-primary;
    transform: rotate(40deg);
    backface-visibility: hidden;
    transform-origin: 100% 100%;
}

[type="checkbox"]:checked:disabled+label:before {
    border-right: 2px solid rgba(0, 0, 0, 0.26);
    border-bottom: 2px solid rgba(0, 0, 0, 0.26);
}


/* Indeterminate checkbox */

[type="checkbox"]:indeterminate+label:before {
    top: -11px;
    left: -12px;
    width: 10px;
    height: 22px;
    border-top: none;
    border-left: none;
    border-right: 2px solid $brand-primary;
    border-bottom: none;
    transform: rotate(90deg);
    backface-visibility: hidden;
    transform-origin: 100% 100%;
}

[type="checkbox"]:indeterminate:disabled+label:before {
    border-right: 2px solid rgba(0, 0, 0, 0.26);
    background-color: transparent;
}

[type="checkbox"].filled-in+label:after {
    border-radius: 2px;
}

[type="checkbox"].filled-in+label:before,
[type="checkbox"].filled-in+label:after {
    content: '';
    left: 0;
    position: absolute;
    /* .1s delay is for check animation */
    transition: border .25s, background-color .25s, width .20s .1s, height .20s .1s, top .20s .1s, left .20s .1s;
    z-index: 1;
}

[type="checkbox"].filled-in:not(:checked)+label:before {
    width: 0;
    height: 0;
    border: 3px solid transparent;
    left: 6px;
    top: 10px;
    -webkit-transform: rotateZ(37deg);
    transform: rotateZ(37deg);
    -webkit-transform-origin: 20% 40%;
    transform-origin: 100% 100%;
}

[type="checkbox"].filled-in:not(:checked)+label:after {
    height: 20px;
    width: 20px;
    background-color: transparent;
    border: 2px solid #5a5a5a;
    top: 0px;
    z-index: 0;
}

[type="checkbox"].filled-in:checked+label:before {
    top: 0;
    left: 1px;
    width: 8px;
    height: 13px;
    border-top: 2px solid transparent;
    border-left: 2px solid transparent;
    border-right: 2px solid #fff;
    border-bottom: 2px solid #fff;
    -webkit-transform: rotateZ(37deg);
    transform: rotateZ(37deg);
    -webkit-transform-origin: 100% 100%;
    transform-origin: 100% 100%;
}

[type="checkbox"].filled-in:checked+label:after {
    top: 0;
    width: 20px;
    height: 20px;
    border: 2px solid $brand-primary;
    background-color: $brand-primary;
    z-index: 0;
}

[type="checkbox"].filled-in.tabbed:focus+label:after {
    border-radius: 2px;
    border-color: #5a5a5a;
    background-color: rgba(0, 0, 0, 0.1);
}

[type="checkbox"].filled-in.tabbed:checked:focus+label:after {
    border-radius: 2px;
    background-color: $brand-primary;
    border-color: $brand-primary;
}

[type="checkbox"].filled-in:disabled:not(:checked)+label:before {
    background-color: transparent;
    border: 2px solid transparent;
}

[type="checkbox"].filled-in:disabled:not(:checked)+label:after {
    border-color: transparent;
    background-color: #BDBDBD;
}

[type="checkbox"].filled-in:disabled:checked+label:before {
    background-color: transparent;
}

[type="checkbox"].filled-in:disabled:checked+label:after {
    background-color: #BDBDBD;
    border-color: #BDBDBD;
}


/* File Input
========================================================================== */

.file-field {
    position: relative;
}

.file-field .file-path-wrapper {
    overflow: hidden;
    padding-left: 10px;
}

.file-field input.file-path {
    width: 100%;
}

.file-field .btn,
.file-field .btn-large {
    float: left;
    height: 3rem;
    line-height: 3rem;
}

.file-field span {
    cursor: pointer;
}

.file-field input[type=file] {
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    bottom: 0;
    width: 100%;
    margin: 0;
    padding: 0;
    font-size: 20px;
    cursor: pointer;
    opacity: 0;
    filter: alpha(opacity=0);
}


/* Text Inputs + Textarea
========================================================================== */


/* Style Placeholders */

::-webkit-input-placeholder {
    color: #d1d1d1;
}

:-moz-placeholder {
    /* Firefox 18- */
    color: #d1d1d1;
}

::-moz-placeholder {
    /* Firefox 19+ */
    color: #d1d1d1;
}

:-ms-input-placeholder {
    color: #d1d1d1;
}


/* Text inputs */

input:not([type]),
input[type=text],
input[type=password],
input[type=email],
input[type=url],
input[type=time],
input[type=date],
input[type=datetime],
input[type=datetime-local],
input[type=tel],
input[type=number],
input[type=search],
textarea.materialize-textarea {
    background-color: transparent;
    border: none;
    color: #333;
    border-bottom: 1px solid $form-elements-border;
    border-radius: 0;
    outline: none;
    height: 40px;
    width: 100%;
    font-size: $font-size;
    margin: 0 0 20px 0;
    padding: 0;
    box-shadow: none;
    box-sizing: content-box;
    transition: all 0.3s;
}

input:not([type]):disabled,
input:not([type])[readonly="readonly"],
input[type=text]:disabled,
input[type=text][readonly="readonly"],
input[type=password]:disabled,
input[type=password][readonly="readonly"],
input[type=email]:disabled,
input[type=email][readonly="readonly"],
input[type=url]:disabled,
input[type=url][readonly="readonly"],
input[type=time]:disabled,
input[type=time][readonly="readonly"],
input[type=date]:disabled,
input[type=date][readonly="readonly"],
input[type=datetime]:disabled,
input[type=datetime][readonly="readonly"],
input[type=datetime-local]:disabled,
input[type=datetime-local][readonly="readonly"],
input[type=tel]:disabled,
input[type=tel][readonly="readonly"],
input[type=number]:disabled,
input[type=number][readonly="readonly"],
input[type=search]:disabled,
input[type=search][readonly="readonly"],
textarea.materialize-textarea:disabled,
textarea.materialize-textarea[readonly="readonly"] {
    color: rgba(0, 0, 0, 0.26);
    border-bottom: 1px dotted rgba(0, 0, 0, 0.26);
}

input:not([type]):disabled+label,
input:not([type])[readonly="readonly"]+label,
input[type=text]:disabled+label,
input[type=text][readonly="readonly"]+label,
input[type=password]:disabled+label,
input[type=password][readonly="readonly"]+label,
input[type=email]:disabled+label,
input[type=email][readonly="readonly"]+label,
input[type=url]:disabled+label,
input[type=url][readonly="readonly"]+label,
input[type=time]:disabled+label,
input[type=time][readonly="readonly"]+label,
input[type=date]:disabled+label,
input[type=date][readonly="readonly"]+label,
input[type=datetime]:disabled+label,
input[type=datetime][readonly="readonly"]+label,
input[type=datetime-local]:disabled+label,
input[type=datetime-local][readonly="readonly"]+label,
input[type=tel]:disabled+label,
input[type=tel][readonly="readonly"]+label,
input[type=number]:disabled+label,
input[type=number][readonly="readonly"]+label,
input[type=search]:disabled+label,
input[type=search][readonly="readonly"]+label,
textarea.materialize-textarea:disabled+label,
textarea.materialize-textarea[readonly="readonly"]+label {
    color: rgba(0, 0, 0, 0.26);
}

input:not([type]):focus:not([readonly]),
input[type=text]:focus:not([readonly]),
input[type=password]:focus:not([readonly]),
input[type=email]:focus:not([readonly]),
input[type=url]:focus:not([readonly]),
input[type=time]:focus:not([readonly]),
input[type=date]:focus:not([readonly]),
input[type=datetime]:focus:not([readonly]),
input[type=datetime-local]:focus:not([readonly]),
input[type=tel]:focus:not([readonly]),
input[type=number]:focus:not([readonly]),
input[type=search]:focus:not([readonly]),
textarea.materialize-textarea:focus:not([readonly]) {
    border-bottom: 1px solid $brand-primary;
    box-shadow: 0 1px 0 0 $brand-primary;
}

input:not([type]):focus:not([readonly])+label,
input[type=text]:focus:not([readonly])+label,
input[type=password]:focus:not([readonly])+label,
input[type=email]:focus:not([readonly])+label,
input[type=url]:focus:not([readonly])+label,
input[type=time]:focus:not([readonly])+label,
input[type=date]:focus:not([readonly])+label,
input[type=datetime]:focus:not([readonly])+label,
input[type=datetime-local]:focus:not([readonly])+label,
input[type=tel]:focus:not([readonly])+label,
input[type=number]:focus:not([readonly])+label,
input[type=search]:focus:not([readonly])+label,
textarea.materialize-textarea:focus:not([readonly])+label {
    color: $brand-primary;
}

input:not([type]).validate+label,
input[type=text].validate+label,
input[type=password].validate+label,
input[type=email].validate+label,
input[type=url].validate+label,
input[type=time].validate+label,
input[type=date].validate+label,
input[type=datetime].validate+label,
input[type=datetime-local].validate+label,
input[type=tel].validate+label,
input[type=number].validate+label,
input[type=search].validate+label,
textarea.materialize-textarea.validate+label {
    width: 100%;
    pointer-events: none;
}

input:not([type])+label:after,
input[type=text]+label:after,
input[type=password]+label:after,
input[type=email]+label:after,
input[type=url]+label:after,
input[type=time]+label:after,
input[type=date]+label:after,
input[type=datetime]+label:after,
input[type=datetime-local]+label:after,
input[type=tel]+label:after,
input[type=number]+label:after,
input[type=search]+label:after,
textarea.materialize-textarea+label:after {
    display: block;
    content: "";
    position: absolute;
    top: 60px;
    opacity: 0;
    transition: .2s opacity ease-out, .2s color ease-out;
}

.input-field {
    position: relative;
    margin-top: 1rem;
    clear: both;
}

.input-field.inline {
    display: inline-block;
    vertical-align: middle;
    margin-left: 5px;
}

.input-field.inline input,
.input-field.inline .select-dropdown {
    margin-bottom: 1rem;
}

.input-field.col label {
    left: 0.75rem;
}

.input-field.col .prefix~label,
.input-field.col .prefix~.validate~label {
    width: calc(100% - 3rem - 1.5rem);
}

.input-field label {
    color: $form-text-color;
    position: absolute;
    top: 0.8rem;
    left: 0;
    font-weight: 300;
    font-size: $font-size;
    cursor: text;
    transition: .2s ease-out;
    text-align: initial;
}

.input-field label:not(.label-icon).active {
    font-size: 1.4rem;
    transform: translateY(-140%);
}

.input-field .prefix {
    position: absolute;
    width: 3rem;
    font-size: 2rem;
    transition: color .2s;
}

.input-field .prefix.active {
    color: $brand-primary;
}

.input-field .prefix~input,
.input-field .prefix~textarea,
.input-field .prefix~label,
.input-field .prefix~.validate~label,
.input-field .prefix~.autocomplete-content {
    margin-left: 3rem;
    width: 92%;
    width: calc(100% - 3rem);
}

.input-field .prefix~label {
    margin-left: 3rem;
}

@media only screen and (max-width: 992px) {
    .input-field .prefix~input {
        width: 86%;
        width: calc(100% - 3rem);
    }
}

@media only screen and (max-width: 600px) {
    .input-field .prefix~input {
        width: 80%;
        width: calc(100% - 3rem);
    }
}


/* Search Field */

.input-field input[type=search] {
    display: block;
    line-height: inherit;
    padding-left: 4rem;
    width: calc(100% - 4rem);
}

.input-field input[type=search]:focus {
    background-color: #fff;
    border: 0;
    box-shadow: none;
    color: #444;
}

.input-field input[type=search]:focus+label i,
.input-field input[type=search]:focus~.mdi-navigation-close,
.input-field input[type=search]:focus~.material-icons {
    color: #444;
}

.input-field input[type=search]+label {
    left: 1rem;
}

.input-field input[type=search]~.mdi-navigation-close,
.input-field input[type=search]~.material-icons {
    position: absolute;
    top: 0;
    right: 1rem;
    color: transparent;
    cursor: pointer;
    font-size: 2rem;
    transition: .3s color;
}


/* Textarea */

textarea {
    width: 100%;
    height: 3rem;
    background-color: transparent;
}

textarea.materialize-textarea {
    overflow-y: hidden;
    /* prevents scroll bar flash */
    padding: .8rem 0 1.6rem 0;
    /* prevents text jump on Enter keypress */
    resize: none;
    min-height: 3rem;
}

.hiddendiv {
    display: none;
    white-space: pre-wrap;
    word-wrap: break-word;
    overflow-wrap: break-word;
    /* future version of deprecated 'word-wrap' */
    padding-top: 1.2rem;
    /* prevents text jump on Enter keypress */
    position: absolute;
    top: 0;
}


/* Autocomplete */

.autocomplete-content {
    margin-top: -20px;
    display: block;
    opacity: 1;
    position: static;
}

.autocomplete-content li .highlight {
    color: #444;
}

.autocomplete-content li img {
    height: 40px;
    width: 40px;
    margin: 5px 15px;
}


/*ui b autocomplete*/

.autocomplete-content {
    margin-top: -20px;
    display: block;
    opacity: 1;
    position: static;
}

.autocomplete-content li .highlight {
    color: #444;
}

.autocomplete-content li img {
    height: 40px;
    width: 40px;
    margin: 5px 15px;
}


/* Radio Buttons
========================================================================== */

[type="radio"]:not(:checked),
[type="radio"]:checked {
    position: absolute;
    left: -9999px;
    opacity: 0;
}

[type="radio"]:not(:checked)+label,
[type="radio"]:checked+label {
    position: relative;
    padding-left: 35px;
    cursor: pointer;
    display: inline-block;
    height: 25px;
    line-height: 25px;
    font-size: $font-size;
    transition: .28s ease;
    -khtml-user-select: none;
    /* webkit (konqueror) browsers */
    user-select: none;
}

[type="radio"]+label:before,
[type="radio"]+label:after {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    margin: 4px;
    width: 16px;
    height: 16px;
    z-index: 0;
    transition: .28s ease;
}


/* Unchecked styles */

[type="radio"]:not(:checked)+label:before,
[type="radio"]:not(:checked)+label:after,
[type="radio"]:checked+label:before,
[type="radio"]:checked+label:after,
[type="radio"].with-gap:checked+label:before,
[type="radio"].with-gap:checked+label:after {
    border-radius: 50%;
}

[type="radio"]:not(:checked)+label:before,
[type="radio"]:not(:checked)+label:after {
    border: 2px solid #5a5a5a;
}

[type="radio"]:not(:checked)+label:after {
    transform: scale(0);
}


/* Checked styles */

[type="radio"]:checked+label:before {
    border: 2px solid transparent;
}

[type="radio"]:checked+label:after,
[type="radio"].with-gap:checked+label:before,
[type="radio"].with-gap:checked+label:after {
    border: 2px solid $brand-primary;
}

[type="radio"]:checked+label:after,
[type="radio"].with-gap:checked+label:after {
    background-color: $brand-primary;
}

[type="radio"]:checked+label:after {
    transform: scale(1.02);
}


/* Radio With gap */

[type="radio"].with-gap:checked+label:after {
    transform: scale(0.5);
}


/* Focused styles */

[type="radio"].tabbed:focus+label:before {
    box-shadow: 0 0 0 10px rgba(0, 0, 0, 0.1);
}


/* Disabled Radio With gap */

[type="radio"].with-gap:disabled:checked+label:before {
    border: 2px solid rgba(0, 0, 0, 0.26);
}

[type="radio"].with-gap:disabled:checked+label:after {
    border: none;
    background-color: rgba(0, 0, 0, 0.26);
}


/* Disabled style */

[type="radio"]:disabled:not(:checked)+label:before,
[type="radio"]:disabled:checked+label:before {
    background-color: transparent;
    border-color: rgba(0, 0, 0, 0.26);
}

[type="radio"]:disabled+label {
    color: rgba(0, 0, 0, 0.26);
}

[type="radio"]:disabled:not(:checked)+label:before {
    border-color: rgba(0, 0, 0, 0.26);
}

[type="radio"]:disabled:checked+label:after {
    background-color: rgba(0, 0, 0, 0.26);
    border-color: #BDBDBD;
}


/* Range
========================================================================== */

.range-field {
    position: relative;
}

input[type=range],
input[type=range]+.thumb {
    cursor: pointer;
}

input[type=range] {
    position: relative;
    background-color: transparent;
    border: none;
    outline: none;
    width: 100%;
    margin: 15px 0;
    padding: 0;
}

input[type=range]:focus {
    outline: none;
}

input[type=range]+.thumb {
    position: absolute;
    top: 10px;
    left: 0;
    border: none;
    height: 0;
    width: 0;
    border-radius: 50%;
    background-color: $brand-primary;
    margin-left: 7px;
    transform-origin: 50% 50%;
    transform: rotate(-45deg);
}

input[type=range]+.thumb .value {
    display: block;
    width: 30px;
    text-align: center;
    color: $brand-primary;
    font-size: 0;
    transform: rotate(45deg);
}

input[type=range]+.thumb.active {
    border-radius: 50% 50% 50% 0;
}

input[type=range]+.thumb.active .value {
    color: #fff;
    margin-left: -1px;
    margin-top: 8px;
    font-size: 10px;
}

input[type=range] {
    -webkit-appearance: none;
}

input[type=range]::-webkit-slider-runnable-track {
    height: 3px;
    background: #c2c0c2;
    border: none;
}

input[type=range]::-webkit-slider-thumb {
    -webkit-appearance: none;
    border: none;
    height: 14px;
    width: 14px;
    border-radius: 50%;
    background-color: $brand-primary;
    transform-origin: 50% 50%;
    margin: -5px 0 0 0;
    transition: .3s;
}

input[type=range]:focus::-webkit-slider-runnable-track {
    background: #ccc;
}

input[type=range] {
    /* fix for FF unable to apply focus style bug  */
    border: 1px solid white;
    /*required for proper track sizing in FF*/
}

input[type=range]::-moz-range-track {
    height: 3px;
    background: #ddd;
    border: none;
}

input[type=range]::-moz-range-thumb {
    border: none;
    height: 14px;
    width: 14px;
    border-radius: 50%;
    background: $brand-primary;
    margin-top: -5px;
}

input[type=range]:-moz-focusring {
    outline: 1px solid #fff;
    outline-offset: -1px;
}

input[type=range]:focus::-moz-range-track {
    background: #ccc;
}

input[type=range]::-ms-track {
    height: 3px;
    background: transparent;
    border-color: transparent;
    border-width: 6px 0;
    /*remove default tick marks*/
    color: transparent;
}

input[type=range]::-ms-fill-lower {
    background: #777;
}

input[type=range]::-ms-fill-upper {
    background: #ddd;
}

input[type=range]::-ms-thumb {
    border: none;
    height: 14px;
    width: 14px;
    border-radius: 50%;
    background: $brand-primary;
}

input[type=range]:focus::-ms-fill-lower {
    background: #888;
}

input[type=range]:focus::-ms-fill-upper {
    background: #ccc;
}


/* Select Field
========================================================================== */

select {
    display: none;
}

select.browser-default {
    display: block;
}

select {
    background-color: rgba(255, 255, 255, 0.9);
    width: 100%;
    padding: 5px;
    border: 1px solid #f2f2f2;
    border-radius: 2px;
    height: 3rem;
}

.select-label {
    position: absolute;
}

.select-wrapper {
    position: relative;
}

.select-wrapper input.select-dropdown {
    position: relative;
    cursor: pointer;
    color: #333;
    background-color: transparent;
    border: none;
    border-bottom: 1px solid $form-elements-border;
    outline: none;
    height: 3rem;
    line-height: 3rem;
    width: 100%;
    font-size: $font-size;
    margin: 0 0 20px 0;
    padding: 0;
    display: block;
}

.select-wrapper span.caret {
    color: initial;
    position: absolute;
    right: 0;
    top: 0;
    bottom: 0;
    height: 10px;
    margin: auto 0;
    font-size: 10px;
    line-height: 10px;
    border-top: 0px;
}

.select-wrapper span.caret.disabled {
    color: rgba(0, 0, 0, 0.26);
}

.select-wrapper+label {
    position: absolute;
    top: -14px;
    font-size: 0.8rem;
}

select:disabled {
    color: rgba(0, 0, 0, 0.3);
}

.select-wrapper input.select-dropdown:disabled {
    color: rgba(0, 0, 0, 0.3);
    cursor: default;
    -webkit-user-select: none;
    /* webkit (safari, chrome) browsers */
    -moz-user-select: none;
    /* mozilla browsers */
    -ms-user-select: none;
    /* IE10+ */
    border-bottom: 1px solid rgba(0, 0, 0, 0.3);
}

.select-wrapper i {
    color: rgba(0, 0, 0, 0.3);
}

.select-dropdown li.disabled,
.select-dropdown li.disabled&gt;span,
.select-dropdown li.optgroup {
    color: rgba(0, 0, 0, 0.3);
    background-color: transparent;
}

.prefix~.select-wrapper {
    margin-left: 3rem;
    width: 92%;
    width: calc(100% - 3rem);
}

.prefix~label {
    margin-left: 3rem;
}

.select-dropdown li img {
    height: 40px;
    width: 40px;
    margin: 5px 15px;
    float: right;
}

.select-dropdown li.optgroup {
    border-top: 1px solid #eee;
}

.select-dropdown li.optgroup.selected&gt;span {
    color: rgba(0, 0, 0, 0.7);
}

.select-dropdown li.optgroup&gt;span {
    color: rgba(0, 0, 0, 0.4);
}

.select-dropdown li.optgroup~li.optgroup-option {
    padding-left: 1rem;
}


/* Switch
========================================================================== */

.switch,
.switch * {
    -webkit-user-select: none;
    -moz-user-select: none;
    -khtml-user-select: none;
    -ms-user-select: none;
}

.switch label {
    cursor: pointer;
}

.switch label input[type=checkbox] {
    opacity: 0;
    width: 0;
    height: 0;
}

.switch label input[type=checkbox]:checked+.lever {
    background-color: $switcher-bg;
}

.switch label input[type=checkbox]:checked+.lever:after {
    background-color: $brand-primary;
    left: 24px;
}

.switch label .lever {
    content: "";
    display: inline-block;
    position: relative;
    width: 40px;
    height: 15px;
    background-color: #818181;
    border-radius: 15px;
    margin-right: 10px;
    transition: background 0.3s ease;
    vertical-align: middle;
    margin: 0 16px;
}

.switch label .lever:after {
    content: "";
    position: absolute;
    display: inline-block;
    width: 21px;
    height: 21px;
    background-color: #F1F1F1;
    border-radius: 21px;
    box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.4);
    left: -5px;
    top: -3px;
    transition: left 0.3s ease, background .3s ease, box-shadow 0.1s ease;
}

input[type=checkbox]:checked:not(:disabled)~.lever:active::after,
input[type=checkbox]:checked:not(:disabled).tabbed:focus~.lever::after {
    box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.4), 0 0 0 15px rgba(38, 166, 154, 0.1);
}

input[type=checkbox]:not(:disabled)~.lever:active:after,
input[type=checkbox]:not(:disabled).tabbed:focus~.lever::after {
    box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.4), 0 0 0 15px rgba(0, 0, 0, 0.08);
}

.switch input[type=checkbox][disabled]+.lever {
    cursor: default;
}

.switch label input[type=checkbox][disabled]+.lever:after,
.switch label input[type=checkbox][disabled]:checked+.lever:after {
    background-color: #BDBDBD;
}

.btn-mat {
    border: none;
    border-radius: 2px;
    display: inline-block;
    height: 36px;
    line-height: 36px;
    padding: 0 2rem;
    text-transform: uppercase;
    vertical-align: middle;
    -webkit-tap-highlight-color: transparent;
}

.btn.disabled,
.disabled.btn-large,
.btn-floating.disabled,
.btn-large.disabled,
.btn-flat.disabled,
.btn:disabled,
.btn-large:disabled,
.btn-floating:disabled,
.btn-large:disabled,
.btn-flat:disabled,
.btn[disabled],
[disabled].btn-large,
.btn-floating[disabled],
.btn-large[disabled],
.btn-flat[disabled] {
    pointer-events: none;
    background-color: #DFDFDF !important;
    box-shadow: none;
    color: #9F9F9F !important;
    cursor: default;
}

.btn.disabled:hover,
.disabled.btn-large:hover,
.btn-floating.disabled:hover,
.btn-large.disabled:hover,
.btn-flat.disabled:hover,
.btn:disabled:hover,
.btn-large:disabled:hover,
.btn-floating:disabled:hover,
.btn-large:disabled:hover,
.btn-flat:disabled:hover,
.btn[disabled]:hover,
[disabled].btn-large:hover,
.btn-floating[disabled]:hover,
.btn-large[disabled]:hover,
.btn-flat[disabled]:hover {
    background-color: #DFDFDF !important;
    color: #9F9F9F !important;
}

.btn,
.btn-large,
.btn-floating,
.btn-large,
.btn-flat {
    font-size: 18px;
    outline: 0;
}

.btn i,
.btn-large i,
.btn-floating i,
.btn-large i,
.btn-flat i {
    font-size: 1.3rem;
    line-height: inherit;
}

.btn:focus,
.btn-large:focus,
.btn-floating:focus {
    background-color: #1d7d74;
}

// .btn,
// .btn-large {
//     text-decoration: none;
//     color: #fff;
//     background-color: $brand-primary;
//     text-align: center;
//     letter-spacing: .5px;
//     transition: .2s ease-out;
//     cursor: pointer;
// }
.btn:hover,
.btn-large:hover {
    background-color: #2bbbad;
}

.btn-floating {
    display: inline-block;
    color: #fff;
    position: relative;
    overflow: hidden;
    z-index: 1;
    width: 40px;
    height: 40px;
    line-height: 40px;
    padding: 0;
    background-color: $brand-primary;
    border-radius: 50%;
    transition: .3s;
    cursor: pointer;
    vertical-align: middle;
}

.btn-floating:hover {
    background-color: $brand-primary;
}

.btn-floating:before {
    border-radius: 0;
}

.btn-floating.btn-large {
    width: 56px;
    height: 56px;
}

.btn-floating.btn-large.halfway-fab {
    bottom: -28px;
}

.btn-floating.btn-large i {
    line-height: 56px;
}

.btn-floating.halfway-fab {
    position: absolute;
    right: 24px;
    bottom: -20px;
}

.btn-floating.halfway-fab.left {
    right: auto;
    left: 24px;
}

.btn-floating i {
    width: inherit;
    display: inline-block;
    text-align: center;
    color: #fff;
    font-size: 1.6rem;
    line-height: 40px;
}

button.btn-floating {
    border: none;
}

.fixed-action-btn {
    position: fixed;
    right: 23px;
    bottom: 23px;
    padding-top: 15px;
    margin-bottom: 0;
    z-index: 998;
}

.fixed-action-btn.active ul {
    visibility: visible;
}

.fixed-action-btn.horizontal {
    padding: 0 0 0 15px;
}

.fixed-action-btn.horizontal ul {
    text-align: right;
    right: 64px;
    top: 50%;
    transform: translateY(-50%);
    height: 100%;
    left: auto;
    width: 500px;
    /*width 100% only goes to width of button container */
}

.fixed-action-btn.horizontal ul li {
    display: inline-block;
    margin: 15px 15px 0 0;
}

.fixed-action-btn.toolbar {
    padding: 0;
    height: 56px;
}

.fixed-action-btn.toolbar.active&gt;a i {
    opacity: 0;
}

.fixed-action-btn.toolbar ul {
    display: flex;
    top: 0;
    bottom: 0;
}

.fixed-action-btn.toolbar ul li {
    flex: 1;
    display: inline-block;
    margin: 0;
    height: 100%;
    transition: none;
}

.fixed-action-btn.toolbar ul li a {
    display: block;
    overflow: hidden;
    position: relative;
    width: 100%;
    height: 100%;
    background-color: transparent;
    box-shadow: none;
    color: #fff;
    line-height: 56px;
    z-index: 1;
}

.fixed-action-btn.toolbar ul li a i {
    line-height: inherit;
}

.fixed-action-btn ul {
    left: 0;
    right: 0;
    text-align: center;
    position: absolute;
    bottom: 64px;
    margin: 0;
    visibility: hidden;
}

.fixed-action-btn ul li {
    margin-bottom: 15px;
}

.fixed-action-btn ul a.btn-floating {
    opacity: 0;
}

.fixed-action-btn .fab-backdrop {
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    width: 40px;
    height: 40px;
    background-color: $brand-primary;
    border-radius: 50%;
    transform: scale(0);
}

.btn-flat {
    box-shadow: none;
    background-color: transparent;
    color: #343434;
    cursor: pointer;
    transition: background-color .2s;
}

.picker__footer .btn-flat {
    border: none;
}

.btn-flat:focus,
.btn-flat:active {
    background-color: transparent;
}

.btn-flat:focus,
.btn-flat:hover {
    background-color: rgba(0, 0, 0, 0.1);
    box-shadow: none;
}

.btn-flat:active {
    background-color: rgba(0, 0, 0, 0.2);
}

.btn-flat.disabled {
    background-color: transparent !important;
    color: #b3b3b3 !important;
    cursor: default;
}

.btn-large {
    height: 54px;
    line-height: 54px;
}

.btn-large i {
    font-size: 1.6rem;
}

.btn-block {
    display: block;
}


/* ==========================================================================
$BASE-PICKER
========================================================================== */


/**
* Note: the root picker element should *NOT* be styled more than what's here.
*/

.picker {
    font-size: 16px;
    text-align: left;
    line-height: 1.2;
    color: #000000;
    position: absolute;
    z-index: 10000;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}


/**
* The picker input element.
*/

.picker__input {
    cursor: default;
}


/**
* When the picker is opened, the input element is "activated".
*/

.picker__input.picker__input--active {
    border-color: #0089ec;
}


/**
* The holder is the only "scrollable" top-level container element.
*/

.picker__holder {
    width: 100%;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
}


/*!
* Default mobile-first, responsive styling for pickadate.js
* Demo: http://amsul.github.io/pickadate.js
*/


/**
* Note: the root picker element should *NOT* be styled more than what's here.
*/


/**
* Make the holder and frame fullscreen.
*/

.picker__holder,
.picker__frame {
    bottom: 0;
    left: 0;
    right: 0;
    top: 100%;
}


/**
* The holder should overlay the entire screen.
*/

.picker__holder {
    position: fixed;
    -webkit-transition: background 0.15s ease-out, top 0s 0.15s;
    -moz-transition: background 0.15s ease-out, top 0s 0.15s;
    transition: background 0.15s ease-out, top 0s 0.15s;
    -webkit-backface-visibility: hidden;
}


/**
* The frame that bounds the box contents of the picker.
*/

.picker__frame {
    position: absolute;
    margin: 0 auto;
    min-width: 256px;
    width: 300px;
    max-height: 350px;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
    filter: alpha(opacity=0);
    -moz-opacity: 0;
    opacity: 0;
    -webkit-transition: all 0.15s ease-out;
    -moz-transition: all 0.15s ease-out;
    transition: all 0.15s ease-out;
}

@media (min-height: 28.875em) {
    .picker__frame {
        overflow: visible;
        top: auto;
        bottom: -100%;
        max-height: 80%;
    }
}

@media (min-height: 40.125em) {
    .picker__frame {
        margin-bottom: 7.5%;
    }
}


/**
* The wrapper sets the stage to vertically align the box contents.
*/

.picker__wrap {
    display: table;
    width: 100%;
    height: 100%;
}

@media (min-height: 28.875em) {
    .picker__wrap {
        display: block;
    }
}


/**
* The box contains all the picker contents.
*/

.picker__box {
    background: #ffffff;
    display: table-cell;
    vertical-align: middle;
}

@media (min-height: 28.875em) {
    .picker__box {
        display: block;
        border: 1px solid #777777;
        border-top-color: #898989;
        border-bottom-width: 0;
        -webkit-border-radius: 5px 5px 0 0;
        -moz-border-radius: 5px 5px 0 0;
        border-radius: 5px 5px 0 0;
        -webkit-box-shadow: 0 12px 36px 16px rgba(0, 0, 0, 0.24);
        -moz-box-shadow: 0 12px 36px 16px rgba(0, 0, 0, 0.24);
        box-shadow: 0 12px 36px 16px rgba(0, 0, 0, 0.24);
    }
}


/**
* When the picker opens...
*/

.picker--opened .picker__holder {
    top: 0;
    background: transparent;
    -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=#1E000000,endColorstr=#1E000000)";
    zoom: 1;
    background: rgba(0, 0, 0, 0.32);
    -webkit-transition: background 0.15s ease-out;
    -moz-transition: background 0.15s ease-out;
    transition: background 0.15s ease-out;
}

.picker--opened .picker__frame {
    top: 0;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=100)";
    filter: alpha(opacity=100);
    -moz-opacity: 1;
    opacity: 1;
}

@media (min-height: 35.875em) {
    .picker--opened .picker__frame {
        top: 10%;
        bottom: auto;
    }
}


/**
* For `large` screens, transform into an inline picker.
*/


/* ==========================================================================
CUSTOM MATERIALIZE STYLES
========================================================================== */

.picker__input.picker__input--active {
    border-color: #E3F2FD;
}

.picker__frame {
    margin: 0 auto;
    max-width: 325px;
}

@media (min-height: 38.875em) {
    .picker--opened .picker__frame {
        top: 10%;
        bottom: auto;
    }
}


/* ==========================================================================
$BASE-DATE-PICKER
========================================================================== */


/**
* The picker box.
*/

.picker__box {
    padding: 0 1em;
}


/**
* The header containing the month and year stuff.
*/

.picker__header {
    text-align: center;
    position: relative;
    margin-top: .75em;
}


/**
* The month and year labels.
*/

.picker__month,
.picker__year {
    display: inline-block;
    margin-left: .25em;
    margin-right: .25em;
}


/**
* The month and year selectors.
*/

.picker__select--month,
.picker__select--year {
    height: 2em;
    padding: 0;
    margin-left: .25em;
    margin-right: .25em;
}

.picker__select--month.browser-default {
    display: inline;
    background-color: #FFFFFF;
    width: 40%;
}

.picker__select--year.browser-default {
    display: inline;
    background-color: #FFFFFF;
    width: 26%;
}

.picker__select--month:focus,
.picker__select--year:focus {
    border-color: rgba(0, 0, 0, 0.05);
}


/**
* The month navigation buttons.
*/

.picker__nav--prev,
.picker__nav--next {
    position: absolute;
    padding: .5em 1.25em;
    width: 1em;
    height: 1em;
    box-sizing: content-box;
    top: -0.25em;
}

.picker__nav--prev {
    left: -1em;
    padding-right: 1.25em;
}

.picker__nav--next {
    right: -1em;
    padding-left: 1.25em;
}

.picker__nav--disabled,
.picker__nav--disabled:hover,
.picker__nav--disabled:before,
.picker__nav--disabled:before:hover {
    cursor: default;
    background: none;
    border-right-color: #f5f5f5;
    border-left-color: #f5f5f5;
}


/**
* The calendar table of dates
*/

.picker__table {
    text-align: center;
    border-collapse: collapse;
    border-spacing: 0;
    table-layout: fixed;
    font-size: 18px;
    width: 100%;
    margin-top: .75em;
    margin-bottom: .5em;
}

.picker__table th,
.picker__table td {
    text-align: center;
}

.picker__table td {
    margin: 0;
    padding: 0;
}


/**
* The weekday labels
*/

.picker__weekday {
    width: 14.285714286%;
    font-size: .75em;
    padding-bottom: .25em;
    color: #999999;
    font-weight: 500;
    /* Increase the spacing a tad */
}

@media (min-height: 33.875em) {
    .picker__weekday {
        padding-bottom: .5em;
    }
}


/**
* The days on the calendar
*/

.picker__day--today {
    position: relative;
    color: #595959;
    letter-spacing: -.3;
    padding: .75rem 0;
    font-weight: 400;
    border: 1px solid transparent;
}

.picker__day--disabled:before {
    border-top-color: #aaaaaa;
}

.picker__day--infocus:hover {
    cursor: pointer;
    color: #000;
    font-weight: 500;
}

.picker__day--outfocus {
    display: none;
    padding: .75rem 0;
    color: #fff;
}

.picker__day--outfocus:hover {
    cursor: pointer;
    color: #dddddd;
    font-weight: 500;
}

.picker__day--highlighted:hover,
.picker--focused .picker__day--highlighted {
    cursor: pointer;
}

.picker__day--selected,
.picker__day--selected:hover,
.picker--focused .picker__day--selected {
    border-radius: 50%;
    transform: scale(0.75);
    background: #0089ec;
    color: #ffffff;
}

.picker__day--disabled,
.picker__day--disabled:hover,
.picker--focused .picker__day--disabled {
    background: #f5f5f5;
    border-color: #f5f5f5;
    color: #dddddd;
    cursor: default;
}

.picker__day--highlighted.picker__day--disabled,
.picker__day--highlighted.picker__day--disabled:hover {
    background: #bbbbbb;
}


/**
* The footer containing the "today", "clear", and "close" buttons.
*/

.picker__footer {
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.picker__button--today,
.picker__button--clear,
.picker__button--close {
    border: 1px solid #ffffff;
    background: #ffffff;
    font-size: .8em;
    padding: .66em 0;
    font-weight: bold;
    width: 33%;
    display: inline-block;
    vertical-align: bottom;
}

.picker__button--today:hover,
.picker__button--clear:hover,
.picker__button--close:hover {
    cursor: pointer;
    color: #000000;
    background: #b1dcfb;
    border-bottom-color: #b1dcfb;
}

.picker__button--today:focus,
.picker__button--clear:focus,
.picker__button--close:focus {
    background: #b1dcfb;
    border-color: rgba(0, 0, 0, 0.05);
    outline: none;
}

.picker__button--today:before,
.picker__button--clear:before,
.picker__button--close:before {
    position: relative;
    display: inline-block;
    height: 0;
}

.picker__button--today:before,
.picker__button--clear:before {
    content: " ";
    margin-right: .45em;
}

.picker__button--today:before {
    top: -0.05em;
    width: 0;
    border-top: 0.66em solid #0059bc;
    border-left: .66em solid transparent;
}

.picker__button--clear:before {
    top: -0.25em;
    width: .66em;
    border-top: 3px solid #ee2200;
}

.picker__button--close:before {
    content: "\D7";
    top: -0.1em;
    vertical-align: top;
    font-size: 1.1em;
    margin-right: .35em;
    color: #777777;
}

.picker__button--today[disabled],
.picker__button--today[disabled]:hover {
    background: #f5f5f5;
    border-color: #f5f5f5;
    color: #dddddd;
    cursor: default;
}

.picker__button--today[disabled]:before {
    border-top-color: #aaaaaa;
}


/* ==========================================================================
CUSTOM MATERIALIZE STYLES
========================================================================== */

.picker__box {
    border-radius: 2px;
    overflow: hidden;
}

.picker__date-display {
    text-align: center;
    background-color: $brand-primary;
    color: #fff;
    padding-bottom: 15px;
    font-weight: 300;
}

.picker__nav--prev:hover,
.picker__nav--next:hover {
    cursor: pointer;
    color: #000000;
    background: #a1ded8;
}

.picker__weekday-display {
    background-color: $date-picker-header;
    padding: 10px;
    font-weight: 200;
    letter-spacing: .5;
    font-size: 1rem;
    margin-bottom: 15px;
}

.picker__month-display {
    text-transform: uppercase;
    font-size: 2rem;
}

.picker__day-display {
    font-size: 4.5rem;
    font-weight: 400;
}

.picker__year-display {
    font-size: 1.8rem;
    color: rgba(255, 255, 255, 0.4);
}

.picker__box {
    padding: 0;
}

.picker__calendar-container {
    padding: 0 1rem;
}

.picker__calendar-container thead {
    border: none;
}

.picker__table {
    margin-top: 0;
    margin-bottom: .5em;
}

.picker__day--infocus {
    color: #595959;
    letter-spacing: -.3;
    padding: .75rem 0;
    font-weight: 400;
    border: 1px solid transparent;
}

.picker__day.picker__day--today {
    color: $brand-primary;
}

.picker__day.picker__day--today.picker__day--selected {
    color: #fff;
}

.picker__weekday {
    font-size: .9rem;
}

.picker__day--selected,
.picker__day--selected:hover,
.picker--focused .picker__day--selected {
    border-radius: 50%;
    transform: scale(0.9);
    background-color: $brand-primary;
    color: #ffffff;
}

.picker__day--selected.picker__day--outfocus,
.picker__day--selected:hover.picker__day--outfocus,
.picker--focused .picker__day--selected.picker__day--outfocus {
    background-color: #a1ded8;
}

.picker__footer {
    text-align: right;
    padding: 5px 10px;
}

.picker__close,
.picker__today {
    font-size: 1.4rem;
    padding: 0 1rem;
    color: $brand-primary;
    border: none;
}

.picker__nav--prev:before,
.picker__nav--next:before {
    content: " ";
    border-top: .5em solid transparent;
    border-bottom: .5em solid transparent;
    border-right: 0.75em solid #676767;
    width: 0;
    height: 0;
    display: block;
    margin: 0 auto;
}

.picker__nav--next:before {
    border-right: 0;
    border-left: 0.75em solid #676767;
}

button.picker__today:focus,
button.picker__clear:focus,
button.picker__close:focus {
    background-color: #a1ded8;
}


/* ==========================================================================
$BASE-TIME-PICKER
========================================================================== */


/**
* The list of times.
*/

.picker__list {
    list-style: none;
    padding: 0.75em 0 4.2em;
    margin: 0;
}


/**
* The times on the clock.
*/

.picker__list-item {
    border-bottom: 1px solid #dddddd;
    border-top: 1px solid #dddddd;
    margin-bottom: -1px;
    position: relative;
    background: #ffffff;
    padding: .75em 1.25em;
}

@media (min-height: 46.75em) {
    .picker__list-item {
        padding: .5em 1em;
    }
}


/* Hovered time */

.picker__list-item:hover {
    cursor: pointer;
    color: #000000;
    background: #b1dcfb;
    border-color: #0089ec;
    z-index: 10;
}


/* Highlighted and hovered/focused time */

.picker__list-item--highlighted {
    border-color: #0089ec;
    z-index: 10;
}

.picker__list-item--highlighted:hover,
.picker--focused .picker__list-item--highlighted {
    cursor: pointer;
    color: #000000;
    background: #b1dcfb;
}


/* Selected and hovered/focused time */

.picker__list-item--selected,
.picker__list-item--selected:hover,
.picker--focused .picker__list-item--selected {
    background: #0089ec;
    color: #ffffff;
    z-index: 10;
}


/* Disabled time */

.picker__list-item--disabled,
.picker__list-item--disabled:hover,
.picker--focused .picker__list-item--disabled {
    background: #f5f5f5;
    border-color: #f5f5f5;
    color: #dddddd;
    cursor: default;
    border-color: #dddddd;
    z-index: auto;
}


/**
* The clear button
*/

.picker--time .picker__button--clear {
    display: block;
    width: 80%;
    margin: 1em auto 0;
    padding: 1em 1.25em;
    background: none;
    border: 0;
    font-weight: 500;
    font-size: .67em;
    text-align: center;
    text-transform: uppercase;
    color: #666;
}

.picker--time .picker__button--clear:hover,
.picker--time .picker__button--clear:focus {
    color: #000000;
    background: #b1dcfb;
    background: #ee2200;
    border-color: #ee2200;
    cursor: pointer;
    color: #ffffff;
    outline: none;
}

.picker--time .picker__button--clear:before {
    top: -0.25em;
    color: #666;
    font-size: 1.25em;
    font-weight: bold;
}

.picker--time .picker__button--clear:hover:before,
.picker--time .picker__button--clear:focus:before {
    color: #ffffff;
}


/* ==========================================================================
$DEFAULT-TIME-PICKER
========================================================================== */


/**
* The frame the bounds the time picker.
*/

.picker--time .picker__frame {
    min-width: 256px;
    max-width: 320px;
}


/**
* The picker box.
*/

.picker--time .picker__box {
    font-size: 1em;
    background: #f2f2f2;
    padding: 0;
}

@media (min-height: 40.125em) {
    .picker--time .picker__box {
        margin-bottom: 5em;
    }
}

.dropdown-content {
    background-color: #fff;
    margin: 0;
    display: none;
    min-width: 100px;
    max-height: 650px;
    overflow-y: auto;
    opacity: 0;
    position: absolute;
    z-index: 999;
    will-change: width, height;
    list-style-type: none;
}

.dropdown-content li {
    clear: both;
    color: rgba(0, 0, 0, 0.87);
    cursor: pointer;
    min-height: 50px;
    line-height: 1.5rem;
    width: 100%;
    text-align: left;
    text-transform: none;
}

.dropdown-content li:hover,
.dropdown-content li.active,
.dropdown-content li.selected {
    background-color: #eee;
}

.dropdown-content li.active.selected {
    background-color: #e1e1e1;
}

.dropdown-content li.divider {
    min-height: 0;
    height: 1px;
}

.dropdown-content li&gt;a,
.dropdown-content li&gt;span {
    font-size: 16px;
    color: #000;
    display: block;
    line-height: 22px;
    padding: 14px 16px;
}

.dropdown-content li&gt;span&gt;label {
    top: 1px;
    left: 0;
    height: 18px;
}

.dropdown-content li&gt;a&gt;i {
    height: inherit;
    line-height: inherit;
    float: left;
    margin: 0 24px 0 0;
    width: 24px;
}

.input-field.col .dropdown-content [type="checkbox"]+label {
    top: 1px;
    left: 0;
    height: 18px;
}


/***UIB dropdown ****/

.dropdown-menu {
    background-color: #fff;
    margin: 0;
    min-width: 100px;
    max-height: 650px;
    overflow-y: auto;
    position: absolute;
    z-index: 999;
    will-change: width, height;
    list-style-type: none;
}

.dropdown-menu li {
    clear: both;
    color: rgba(0, 0, 0, 0.87);
    cursor: pointer;
    min-height: 50px;
    line-height: 1.5rem;
    width: 100%;
    text-align: left;
    text-transform: none;
}

.dropdown-menu li:hover,
.dropdown-menu li.active,
.dropdown-menu li.selected {
    background-color: #eee;
}

.dropdown-menu li.active {
    background-color: #e1e1e1;
}

.dropdown-menu li&gt;a,
.dropdown-menu li&gt;span {
    font-size: 16px;
    color: #000;
    display: block;
    line-height: 22px;
    padding: 14px 16px;
}

.dropdown-menu&gt;.active&gt;a,
.dropdown-menu&gt;.active&gt;a:focus {
    font-size: 16px;
    color: #000;
    display: block;
    background: #fff;
    line-height: 22px;
    padding: 14px 16px;
}

.dropdown-menu&gt;.active&gt;a:hover {
    background-color: #eee;
}


/* File Input
   ========================================================================== */

.file-field {
    position: relative;
}

.file-field .file-path-wrapper {
    overflow: hidden;
    padding-left: 10px;
}

.file-field input.file-path {
    width: 100%;
}

.file-field .btn-mat,
.file-field .btn-large {
    float: left;
    height: 3rem;
    line-height: 3rem;
}

.file-field span {
    cursor: pointer;
}

.file-field input[type=file] {
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    bottom: 0;
    width: 100%;
    margin: 0;
    padding: 0;
    font-size: 20px;
    cursor: pointer;
    opacity: 0;
    filter: alpha(opacity=0);
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>color</field_list>
        <has_preview>false</has_preview>
        <id>guide-add-event-material-ng</id>
        <internal>false</internal>
        <link/>
        <name>City Guide Add Event Material Ng</name>
        <option_schema>[{"name":"show_add_cart_button","label":"Show Add Cart Button","type":"boolean"},{"hint":"Define a URL Format for successful order page","name":"url","label":"Custom URL Format","type":"string"},{"displayValue":"Page","name":"page","label":"Successful Order Page","type":"reference","value":"sp_page","ed":{"reference":"sp_page"}},{"displayValue":"Table","name":"table","label":"Successful Order Table","type":"reference","value":"sys_db_object","ed":{"reference":"sys_db_object"}},{"hint":"Enable auto-redirection after ordering an item","name":"auto_redirect","label":"Auto Redirect on Successful Order","type":"boolean"}]</option_schema>
        <public>false</public>
        <roles>snc_external,snc_internal</roles>
        <script><![CDATA[// populate the 'data' variable with catalog item, variables, and variable view
(function() {
    if (input) {
        if (input.action == 'get') {
            data.formdata = {};
            data.formdata.types = [];
            data.formdata.typesWithsysid = {};
            var typegr = new GlideRecord('x_snc_guide_event_type');
            typegr.addActiveQuery();
            typegr.query();
            while (typegr.next()) {
                data.formdata.types.push(typegr.name.toString());
                data.formdata.typesWithsysid[typegr.name.toString()] = typegr.sys_id.toString();
            }
        }

        if (input.action == 'set') {
            var gr = new GlideRecord('x_snc_guide_event');
            gr.initialize();
            gr.name = input.event.name;
            gr.start_date = input.event.startdate;
            gr.end_date = input.event.enddate;
            gr.description = input.event.description;
            gr.featured = input.event.featured;
            //gr.site = input.sites[input.event.site];
            gr.type_list = input.types[input.event.type];
            var sysID = gr.insert();
            data.response = {};
            // data.response.typesys = typesys;
            data.response.eventsys = sysID;

        }
    }

})()]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>sush.chandrashekar</sys_created_by>
        <sys_created_on>2017-05-30 19:51:59</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>99a28cb5db07ba00c3beffa31d9619c8</sys_id>
        <sys_mod_count>300</sys_mod_count>
        <sys_name>City Guide Add Event Material Ng</sys_name>
        <sys_package display_value="Guide" source="x_snc_guide">e95995f8db767200c3beffa31d9619fc</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Guide">e95995f8db767200c3beffa31d9619fc</sys_scope>
        <sys_update_name>sp_widget_99a28cb5db07ba00c3beffa31d9619c8</sys_update_name>
        <sys_updated_by>sush.chandrashekar</sys_updated_by>
        <sys_updated_on>2017-06-06 01:34:45</sys_updated_on>
        <template><![CDATA[<div class="material-form row">
    <form class="col-xs-12">
        <div input-field>
            <input type="text" ng-model="event.name" length="150">
            <label>What is the name of your event?</label>
        </div>
    </form>

    <!--
    <form class="col-xs-12">
        <div class="input-field ">
            <input id="autocomplete-input" typeahead-on-select="c.addSite($item)" type="text" ng-model="c.event.site" uib-typeahead="site as site.name for site in c.getSites($viewValue)" typeahead-no-results="noResults" class="autocomplete">
            <label for="autocomplete-input">Choose a value for your event</label>
        </div>
    </form>-->

    <div class="col-xs-12">
        <!--<label for="inputCreated">Start date</label>-->
        <input input-date type="text" name="created" id="startdate" ng-model="event.startdate " container="" format="mm/dd/yyyy" months-full="{{ c.month }}" months-short="{{ c.monthShort }}" weekdays-full="{{ c.weekdaysFull }}" weekdays-short="{{ c.weekdaysShort }}"
            placeholder="Start date" weekdays-letter="{{ c.weekdaysLetter }}" disable="disable" min="{{ c.minDate }}" max="{{ c.maxDate }}" today="c.today" first-day="1" clear="c.clear" close="c.close" select-years="15" on-start="" on-render="" on-open=""
            on-close="" on-set="" on-stop="" />
    </div>

    <div class="col-xs-12 reduce-input-margin">
        <!--<label for="inputCreated">End date</label>-->
        <input input-date type="text" name="created" id="enddate" ng-model="event.enddate" container="" format="mm/dd/yyyy" months-full="{{ c.month }}" months-short="{{ c.monthShort }}" weekdays-full="{{ c.weekdaysFull }}" weekdays-short="{{ c.weekdaysShort }}"
            placeholder="End date" weekdays-letter="{{ c.weekdaysLetter }}" disable="disable" min="{{ c.minDate }}" max="{{ c.maxDate }}" today="c.today" first-day="1" clear="c.clear" close="c.close" select-years="15" on-start="" on-render="" on-open="" on-close=""
            on-set="" on-stop="" />
    </div>

    <div class="col-xs-12 ">
        <div input-field>
            <select placeholder="Select a type" class="" ng-model="event.type" material-select watch>
                <option ng-repeat ="type in c.data.types">{{type}}</option>
            </select>
        </div>
    </div>

    <div class="col-xs-12">
        <label class="label">Would you like this event listed on the featured event list?</label>
        <div class="switch">
            <label>
                 No
                <input ng-model ="event.featured" type="checkbox">
                <span class="lever"></span>
                Yes
            </label>
        </div>
    </div>

    <div class="">
        <form class="col-xs-12 ">
            <div class="">
                <div input-field>
                    <textarea ng-model="event.description" class="materialize-textarea"></textarea>
                    <label>Description</label>
                </div>
            </div>
        </form>
    </div>


    <div class="file-field input-field">

        <!--<span>File</span>-->
        <div class="">

            <input type="file" onchange="angular.element(this).scope().setFiles(this)">
        </div>

        <div class="file-path-wrapper">
            <input placeholder="Choose a poster" class="file-path validate" type="text">
        </div>
    </div>

    <div class="bottom-div text-center">
        <div class="btn-div">
            <div ng-click="c.submitEvent(event)" class="add-event-btn text-center" ng-class="{'pop-it-up':c.showSubmit}">
                <p>Submit</p>
            </div>
        </div>
        <p class="success-msg" ng-show="c.data.eventCreated"> Event submitted successfully</p>
    </div>

    <div>

    </div>


</div>]]></template>
    </sp_widget>
</record_update>
